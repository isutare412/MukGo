version: '3.8'

services:
  rabbitmq:
    container_name: rabbitmq
    build:
      context: ./
      dockerfile: rabbitmq.Dockerfile
    networks:
      - mukgo_internal
    restart: on-failure
    env_file: ./config/default/mukgo_rabbitmq.env
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - TZ=Asia/Seoul

  api_server:
    container_name: api_server
    build:
      context: ./
      dockerfile: api_server.Dockerfile
    networks:
      - mukgo_internal
    depends_on:
      - rabbitmq
    restart: on-failure
    env_file: ./config/default/mukgo_api.env
    ports:
      - '7777:7777'
    environment:
      - TZ=Asia/Seoul

  db_server:
    container_name: db_server
    build:
      context: ./
      dockerfile: db_server.Dockerfile
    networks:
      - mukgo_internal
    depends_on:
      - rabbitmq
      - mongo
    restart: on-failure
    env_file: ./config/default/mukgo_db.env
    environment:
      - TZ=Asia/Seoul

  log_server:
    container_name: log_server
    build:
      context: ./
      dockerfile: log_server.Dockerfile
    networks:
      - mukgo_internal
    depends_on:
      - rabbitmq
    restart: on-failure
    env_file: ./config/default/mukgo_log.env
    environment:
      - TZ=Asia/Seoul

  mongo:
    container_name: mongo
    image: mongo:4.4.1-bionic
    networks:
      - mukgo_internal
    restart: on-failure
    ports:
      - 27017:27017
    env_file: ./config/default/mukgo_mongo.env
    volumes:
      - mongo_data:/data/db

  mongo_express:
    container_name: mongo_express
    image: mongo-express:0.54
    networks:
      - mukgo_internal
    restart: on-failure
    ports:
    - 8081:8081
    env_file: ./config/default/mukgo_mongo_express.env

networks:
  mukgo_internal:
    driver: bridge

volumes:
  mongo_data:
    driver: local
