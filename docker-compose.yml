version: '3.8'

services:
  rabbitmq:
    container_name: rabbitmq
    build:
      context: ./
      dockerfile: rabbitmq.Dockerfile
    networks:
      - mukgo_internal
    restart: on-failure
    env_file: ./build_config/rabbitmq.env
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - TZ=Asia/Seoul

  api_server:
    container_name: api_server
    build:
      context: ./
      dockerfile: api_server.Dockerfile
    networks:
      - mukgo_internal
    depends_on:
      - rabbitmq
    restart: on-failure
    ports:
      - '7777:7777'
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./config/default/mukgo_api.yml:/config/mukgo_api.yml:ro

  log_server:
    container_name: log_server
    build:
      context: ./
      dockerfile: log_server.Dockerfile
    networks:
      - mukgo_internal
    depends_on:
      - rabbitmq
    restart: on-failure
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./config/default/mukgo_log.yml:/config/mukgo_log.yml:ro

  mongo:
    container_name: mongo
    image: mongo:4.4.1-bionic
    networks:
      - mukgo_internal
    restart: on-failure
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mukgo
      - MONGO_INITDB_ROOT_PASSWORD=mukgo
    volumes:
      - mongo_data:/data/db

  mongo_express:
   container_name: mongo_express
   image: mongo-express:0.54
   networks:
    - mukgo_internal
   restart: on-failure
   ports:
    - 8081:8081
   environment:
    - ME_CONFIG_MONGODB_ADMINUSERNAME=mukgo
    - ME_CONFIG_MONGODB_ADMINPASSWORD=mukgo

networks:
  mukgo_internal:
    driver: bridge

volumes:
  mongo_data:
    driver: local
